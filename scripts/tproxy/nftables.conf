#! /usr/sbin/nft -f

define RESERVED_IP = {
    10.0.0.0/8,
    100.64.0.0/10,
    127.0.0.0/8,
    169.254.0.0/16,
    172.16.0.0/12,
    192.0.0.0/24,
    224.0.0.0/4,
    240.0.0.0/4,
    255.255.255.255/32
}

define PROXY_IP = {
    192.168.2.145,
    192.168.2.135,
    192.168.122.17,
    192.168.122.185
}

define PROXY_MAC = {
    FC:D9:08:35:72:6A,
    78:20:A5:F5:8A:6D
}

# add table ip yuhaiin

table inet yuhaiin {
        # this only for child device connect to current device
        #
        chain prerouting {
                type filter hook prerouting priority mangle; policy accept;
                # ip daddr $RESERVED_IP return
                # meta l4proto tcp ip daddr 192.168.0.0/16 return
                # ip daddr 192.168.0.0/16 udp dport != 53 return
                # ip6 daddr { ::1, fe80::/10 } return
                # meta l4proto tcp ip6 daddr fd00::/8 return
                # ip6 daddr fd00::/8 udp dport != 53 return
                udp dport { 5353,5355,5351,1900 } return
                udp sport { 5353,5355,5351,1900 } return
                ip daddr { 100.64.0.0/10, 255.255.255.255/32, 192.168.122.255/32, 192.168.2.255/32, 239.255.255.250,203.0.113.1 } return
                meta mark 0xff return
                meta l4proto { tcp, udp } ip saddr $PROXY_IP meta mark set 0x1 tproxy ip to 127.0.0.1:8083 accept
                meta l4proto { tcp, udp } ether saddr $PROXY_MAC meta mark set 0x1 tproxy ip6 to [::1]:8083 accept
        }

        # this is for proxy the deivce self
        # at most router case this is not need
        #
        # chain output {
        #         type route hook output priority filter; policy accept;
        #         ip daddr $RESERVED_IP return
        #         meta l4proto tcp ip daddr 192.168.0.0/16 return
        #         ip daddr 192.168.0.0/16 udp dport != 53 return
        #         ip6 daddr { ::1, fe80::/10 } return
        #         meta l4proto tcp ip6 daddr fd00::/8 return
        #         ip6 daddr fd00::/8 udp dport != 53 return
        #         meta mark 0xff return
        #         meta l4proto { tcp, udp } meta mark set 0x00000001 accept
        # }


        # chain divert {
        #         type filter hook prerouting priority mangle; policy accept;
        #         meta l4proto tcp socket transparent 1 meta mark set 0x00000001 accept
        # }
}
