// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pkg/protos/config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DNSDnsType int32

const (
	DNS_reserve DNSDnsType = 0
	DNS_udp     DNSDnsType = 1
	DNS_tcp     DNSDnsType = 2
	DNS_doh     DNSDnsType = 3
	DNS_dot     DNSDnsType = 4
)

// Enum value maps for DNSDnsType.
var (
	DNSDnsType_name = map[int32]string{
		0: "reserve",
		1: "udp",
		2: "tcp",
		3: "doh",
		4: "dot",
	}
	DNSDnsType_value = map[string]int32{
		"reserve": 0,
		"udp":     1,
		"tcp":     2,
		"doh":     3,
		"dot":     4,
	}
)

func (x DNSDnsType) Enum() *DNSDnsType {
	p := new(DNSDnsType)
	*p = x
	return p
}

func (x DNSDnsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DNSDnsType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_config_config_proto_enumTypes[0].Descriptor()
}

func (DNSDnsType) Type() protoreflect.EnumType {
	return &file_pkg_protos_config_config_proto_enumTypes[0]
}

func (x DNSDnsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DNSDnsType.Descriptor instead.
func (DNSDnsType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{4, 0}
}

type ProxyProxyType int32

const (
	Proxy_reserve ProxyProxyType = 0
	Proxy_http    ProxyProxyType = 1
	Proxy_socks5  ProxyProxyType = 2
	Proxy_redir   ProxyProxyType = 3
)

// Enum value maps for ProxyProxyType.
var (
	ProxyProxyType_name = map[int32]string{
		0: "reserve",
		1: "http",
		2: "socks5",
		3: "redir",
	}
	ProxyProxyType_value = map[string]int32{
		"reserve": 0,
		"http":    1,
		"socks5":  2,
		"redir":   3,
	}
)

func (x ProxyProxyType) Enum() *ProxyProxyType {
	p := new(ProxyProxyType)
	*p = x
	return p
}

func (x ProxyProxyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProxyProxyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_config_config_proto_enumTypes[1].Descriptor()
}

func (ProxyProxyType) Type() protoreflect.EnumType {
	return &file_pkg_protos_config_config_proto_enumTypes[1]
}

func (x ProxyProxyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProxyProxyType.Descriptor instead.
func (ProxyProxyType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{5, 0}
}

type Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemProxy *SystemProxy `protobuf:"bytes,1,opt,name=SystemProxy,json=system_proxy,proto3" json:"SystemProxy,omitempty"`
	Bypass      *Bypass      `protobuf:"bytes,2,opt,name=Bypass,json=bypass,proto3" json:"Bypass,omitempty"`
	Proxy       *Proxy       `protobuf:"bytes,3,opt,name=Proxy,json=proxy,proto3" json:"Proxy,omitempty"`
	Dns         *DnsSetting  `protobuf:"bytes,4,opt,name=dns,proto3" json:"dns,omitempty"`
}

func (x *Setting) Reset() {
	*x = Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *Setting) GetSystemProxy() *SystemProxy {
	if x != nil {
		return x.SystemProxy
	}
	return nil
}

func (x *Setting) GetBypass() *Bypass {
	if x != nil {
		return x.Bypass
	}
	return nil
}

func (x *Setting) GetProxy() *Proxy {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *Setting) GetDns() *DnsSetting {
	if x != nil {
		return x.Dns
	}
	return nil
}

type DnsSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remote *DNS `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	Local  *DNS `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *DnsSetting) Reset() {
	*x = DnsSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsSetting) ProtoMessage() {}

func (x *DnsSetting) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsSetting.ProtoReflect.Descriptor instead.
func (*DnsSetting) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *DnsSetting) GetRemote() *DNS {
	if x != nil {
		return x.Remote
	}
	return nil
}

func (x *DnsSetting) GetLocal() *DNS {
	if x != nil {
		return x.Local
	}
	return nil
}

type SystemProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HTTP   bool `protobuf:"varint,2,opt,name=HTTP,json=http,proto3" json:"HTTP,omitempty"`
	Socks5 bool `protobuf:"varint,3,opt,name=Socks5,json=socks5,proto3" json:"Socks5,omitempty"`
}

func (x *SystemProxy) Reset() {
	*x = SystemProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemProxy) ProtoMessage() {}

func (x *SystemProxy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemProxy.ProtoReflect.Descriptor instead.
func (*SystemProxy) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *SystemProxy) GetHTTP() bool {
	if x != nil {
		return x.HTTP
	}
	return false
}

func (x *SystemProxy) GetSocks5() bool {
	if x != nil {
		return x.Socks5
	}
	return false
}

type Bypass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool   `protobuf:"varint,1,opt,name=Enabled,json=enabled,proto3" json:"Enabled,omitempty"`
	BypassFile string `protobuf:"bytes,2,opt,name=BypassFile,json=bypass_file,proto3" json:"BypassFile,omitempty"`
}

func (x *Bypass) Reset() {
	*x = Bypass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bypass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bypass) ProtoMessage() {}

func (x *Bypass) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bypass.ProtoReflect.Descriptor instead.
func (*Bypass) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *Bypass) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Bypass) GetBypassFile() string {
	if x != nil {
		return x.BypassFile
	}
	return ""
}

type DNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string     `protobuf:"bytes,1,opt,name=Host,json=host,proto3" json:"Host,omitempty"`
	Type   DNSDnsType `protobuf:"varint,5,opt,name=type,proto3,enum=yuhaiin.config.DNSDnsType" json:"type,omitempty"`
	Proxy  bool       `protobuf:"varint,3,opt,name=Proxy,json=proxy,proto3" json:"Proxy,omitempty"`
	Subnet string     `protobuf:"bytes,4,opt,name=subnet,proto3" json:"subnet,omitempty"`
}

func (x *DNS) Reset() {
	*x = DNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *DNS) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DNS) GetType() DNSDnsType {
	if x != nil {
		return x.Type
	}
	return DNS_reserve
}

func (x *DNS) GetProxy() bool {
	if x != nil {
		return x.Proxy
	}
	return false
}

func (x *DNS) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

type Proxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proxy map[string]string `protobuf:"bytes,4,rep,name=proxy,proto3" json:"proxy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Proxy) Reset() {
	*x = Proxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_protos_config_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy) ProtoMessage() {}

func (x *Proxy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_config_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy.ProtoReflect.Descriptor instead.
func (*Proxy) Descriptor() ([]byte, []int) {
	return file_pkg_protos_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *Proxy) GetProxy() map[string]string {
	if x != nil {
		return x.Proxy
	}
	return nil
}

var File_pkg_protos_config_config_proto protoreflect.FileDescriptor

var file_pkg_protos_config_config_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01,
	0x0a, 0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x0c, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x42, 0x79, 0x70,
	0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x79, 0x70, 0x61, 0x73,
	0x73, 0x52, 0x06, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2d, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x03, 0x64, 0x6e, 0x73, 0x22, 0x65, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x4e, 0x53, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x4e, 0x53, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x0b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x48,
	0x54, 0x54, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x22, 0x43, 0x0a, 0x06, 0x42, 0x79, 0x70, 0x61, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x42,
	0x79, 0x70, 0x61, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xb6, 0x01, 0x0a,
	0x03, 0x44, 0x4e, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x4e, 0x53, 0x2e, 0x64, 0x6e, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63,
	0x70, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x6f, 0x68, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x64, 0x6f, 0x74, 0x10, 0x04, 0x22, 0xb5, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x36, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x72, 0x10, 0x03, 0x32, 0x7e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x6f, 0x12, 0x37, 0x0a, 0x04, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x79,
	0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x75, 0x74,
	0x6f, 0x72, 0x75, 0x66, 0x61, 0x2f, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_protos_config_config_proto_rawDescOnce sync.Once
	file_pkg_protos_config_config_proto_rawDescData = file_pkg_protos_config_config_proto_rawDesc
)

func file_pkg_protos_config_config_proto_rawDescGZIP() []byte {
	file_pkg_protos_config_config_proto_rawDescOnce.Do(func() {
		file_pkg_protos_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_protos_config_config_proto_rawDescData)
	})
	return file_pkg_protos_config_config_proto_rawDescData
}

var file_pkg_protos_config_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_protos_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_protos_config_config_proto_goTypes = []interface{}{
	(DNSDnsType)(0),       // 0: yuhaiin.config.DNS.dns_type
	(ProxyProxyType)(0),   // 1: yuhaiin.config.Proxy.proxy_type
	(*Setting)(nil),       // 2: yuhaiin.config.Setting
	(*DnsSetting)(nil),    // 3: yuhaiin.config.dns_setting
	(*SystemProxy)(nil),   // 4: yuhaiin.config.SystemProxy
	(*Bypass)(nil),        // 5: yuhaiin.config.Bypass
	(*DNS)(nil),           // 6: yuhaiin.config.DNS
	(*Proxy)(nil),         // 7: yuhaiin.config.Proxy
	nil,                   // 8: yuhaiin.config.Proxy.ProxyEntry
	(*emptypb.Empty)(nil), // 9: google.protobuf.Empty
}
var file_pkg_protos_config_config_proto_depIdxs = []int32{
	4,  // 0: yuhaiin.config.Setting.SystemProxy:type_name -> yuhaiin.config.SystemProxy
	5,  // 1: yuhaiin.config.Setting.Bypass:type_name -> yuhaiin.config.Bypass
	7,  // 2: yuhaiin.config.Setting.Proxy:type_name -> yuhaiin.config.Proxy
	3,  // 3: yuhaiin.config.Setting.dns:type_name -> yuhaiin.config.dns_setting
	6,  // 4: yuhaiin.config.dns_setting.remote:type_name -> yuhaiin.config.DNS
	6,  // 5: yuhaiin.config.dns_setting.local:type_name -> yuhaiin.config.DNS
	0,  // 6: yuhaiin.config.DNS.type:type_name -> yuhaiin.config.DNS.dns_type
	8,  // 7: yuhaiin.config.Proxy.proxy:type_name -> yuhaiin.config.Proxy.ProxyEntry
	9,  // 8: yuhaiin.config.config_dao.load:input_type -> google.protobuf.Empty
	2,  // 9: yuhaiin.config.config_dao.save:input_type -> yuhaiin.config.Setting
	2,  // 10: yuhaiin.config.config_dao.load:output_type -> yuhaiin.config.Setting
	9,  // 11: yuhaiin.config.config_dao.save:output_type -> google.protobuf.Empty
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_protos_config_config_proto_init() }
func file_pkg_protos_config_config_proto_init() {
	if File_pkg_protos_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_protos_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bypass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_config_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_protos_config_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_protos_config_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_protos_config_config_proto_goTypes,
		DependencyIndexes: file_pkg_protos_config_config_proto_depIdxs,
		EnumInfos:         file_pkg_protos_config_config_proto_enumTypes,
		MessageInfos:      file_pkg_protos_config_config_proto_msgTypes,
	}.Build()
	File_pkg_protos_config_config_proto = out.File
	file_pkg_protos_config_config_proto_rawDesc = nil
	file_pkg_protos_config_config_proto_goTypes = nil
	file_pkg_protos_config_config_proto_depIdxs = nil
}
