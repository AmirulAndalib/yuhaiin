syntax = "proto3";
package yuhaiin.config;

option go_package = "github.com/Asutorufa/yuhaiin/pkg/protos/config";
// protoc --go_out=plugins=grpc:. --go_opt=paths=source_relative config.proto

import "google/protobuf/empty.proto";

message setting {
  system_proxy system_proxy = 1 [ json_name = "system_proxy" ];
  bypass bypass = 2 [ json_name = "bypass" ];
  proxy proxy = 3 [ json_name = "proxy" ];
  dns_setting dns = 4 [ json_name = "dns" ];
}

message dns_setting {
  dns remote = 1 [ json_name = "remote" ];
  dns local = 2 [ json_name = "local" ];
}

message system_proxy {
  bool http = 2 [ json_name = "http" ];
  bool socks5 = 3 [ json_name = "socks5" ];
}

message bypass {
  bool enabled = 1 [ json_name = "enabled" ];
  string bypass_file = 2 [ json_name = "bypass_file" ];
}

message dns {
  string host = 1 [ json_name = "host" ];
  enum dns_type {
    reserve = 0;
    udp = 1;
    tcp = 2;
    doh = 3;
    dot = 4;
  }
  dns_type type = 5 [ json_name = "type" ];
  bool proxy = 3 [ json_name = "proxy" ];
  string subnet = 4 [ json_name = "subnet" ];
}

message proxy {
  enum proxy_type {
    reserve = 0;
    http = 1;
    socks5 = 2;
    redir = 3;
  }
  map<string, string> proxy = 4 [ json_name = "proxy" ];
}

service config_dao {
  rpc load(google.protobuf.Empty) returns (setting);
  rpc save(setting) returns (google.protobuf.Empty);
}