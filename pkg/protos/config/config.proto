syntax = "proto3";
package yuhaiin.config;

option go_package = "github.com/Asutorufa/yuhaiin/pkg/protos/config";

import "google/protobuf/empty.proto";

message setting {
  system_proxy system_proxy = 1 [ json_name = "system_proxy" ];
  bypass bypass = 2 [ json_name = "bypass" ];
  dns_setting dns = 4 [ json_name = "dns" ];
  server server = 5 [ json_name = "server" ];
}

message dns_setting {
  dns remote = 1 [ json_name = "remote" ];
  dns local = 2 [ json_name = "local" ];
}

message system_proxy {
  bool http = 2 [ json_name = "http" ];
  bool socks5 = 3 [ json_name = "socks5" ];
}

message bypass {
  bool enabled = 1 [ json_name = "enabled" ];
  string bypass_file = 2 [ json_name = "bypass_file" ];
}

message dns {
  string host = 1 [ json_name = "host" ];
  enum dns_type {
    reserve = 0;
    udp = 1;
    tcp = 2;
    doh = 3;
    dot = 4;
  }
  dns_type type = 5 [ json_name = "type" ];
  bool proxy = 3 [ json_name = "proxy" ];
  string subnet = 4 [ json_name = "subnet" ];
}

message server {
  message protocol {
    string name = 1 [ json_name = "name" ];
    oneof protocol {
      http http = 3 [ json_name = "http" ];
      socks5 socks5 = 4 [ json_name = "socks5" ];
      redir redir = 5 [ json_name = "redir" ];
    }
  }

  map<string, protocol> servers = 5 [ json_name = "servers" ];
}

message http {
  string host = 1 [ json_name = "host" ];
  string username = 3 [ json_name = "username" ];
  string password = 4 [ json_name = "password" ];
}

message socks5 {
  string host = 1 [ json_name = "host" ];
  string username = 3 [ json_name = "username" ];
  string password = 4 [ json_name = "password" ];
}

message redir { string host = 1 [ json_name = "host" ]; }

service config_dao {
  rpc load(google.protobuf.Empty) returns (setting);
  rpc save(setting) returns (google.protobuf.Empty);
}