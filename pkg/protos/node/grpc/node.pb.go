// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.7
// source: node/grpc/node.proto

package service

import (
	node "github.com/Asutorufa/yuhaiin/pkg/protos/node"
	point "github.com/Asutorufa/yuhaiin/pkg/protos/node/point"
	subscribe "github.com/Asutorufa/yuhaiin/pkg/protos/node/subscribe"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NowReqNowReqNet int32

const (
	NowReq_reserve NowReqNowReqNet = 0
	NowReq_tcp     NowReqNowReqNet = 1
	NowReq_udp     NowReqNowReqNet = 2
)

// Enum value maps for NowReqNowReqNet.
var (
	NowReqNowReqNet_name = map[int32]string{
		0: "reserve",
		1: "tcp",
		2: "udp",
	}
	NowReqNowReqNet_value = map[string]int32{
		"reserve": 0,
		"tcp":     1,
		"udp":     2,
	}
)

func (x NowReqNowReqNet) Enum() *NowReqNowReqNet {
	p := new(NowReqNowReqNet)
	*p = x
	return p
}

func (x NowReqNowReqNet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NowReqNowReqNet) Descriptor() protoreflect.EnumDescriptor {
	return file_node_grpc_node_proto_enumTypes[0].Descriptor()
}

func (NowReqNowReqNet) Type() protoreflect.EnumType {
	return &file_node_grpc_node_proto_enumTypes[0]
}

func (x NowReqNowReqNet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NowReqNowReqNet.Descriptor instead.
func (NowReqNowReqNet) EnumDescriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{1, 0}
}

type UseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcp  bool   `protobuf:"varint,1,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp  bool   `protobuf:"varint,2,opt,name=udp,proto3" json:"udp,omitempty"`
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *UseReq) Reset() {
	*x = UseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseReq) ProtoMessage() {}

func (x *UseReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseReq.ProtoReflect.Descriptor instead.
func (*UseReq) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{0}
}

func (x *UseReq) GetTcp() bool {
	if x != nil {
		return x.Tcp
	}
	return false
}

func (x *UseReq) GetUdp() bool {
	if x != nil {
		return x.Udp
	}
	return false
}

func (x *UseReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type NowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Net NowReqNowReqNet `protobuf:"varint,1,opt,name=net,json=type,proto3,enum=yuhaiin.protos.node.service.NowReqNowReqNet" json:"net,omitempty"`
}

func (x *NowReq) Reset() {
	*x = NowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowReq) ProtoMessage() {}

func (x *NowReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowReq.ProtoReflect.Descriptor instead.
func (*NowReq) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{1}
}

func (x *NowReq) GetNet() NowReqNowReqNet {
	if x != nil {
		return x.Net
	}
	return NowReq_reserve
}

type LatencyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*LatencyReqRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *LatencyReq) Reset() {
	*x = LatencyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyReq) ProtoMessage() {}

func (x *LatencyReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyReq.ProtoReflect.Descriptor instead.
func (*LatencyReq) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{2}
}

func (x *LatencyReq) GetRequests() []*LatencyReqRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type LatencyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashLatencyMap map[string]*LatencyRespLatency `protobuf:"bytes,1,rep,name=hash_latency_map,proto3" json:"hash_latency_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LatencyResp) Reset() {
	*x = LatencyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyResp) ProtoMessage() {}

func (x *LatencyResp) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyResp.ProtoReflect.Descriptor instead.
func (*LatencyResp) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{3}
}

func (x *LatencyResp) GetHashLatencyMap() map[string]*LatencyRespLatency {
	if x != nil {
		return x.HashLatencyMap
	}
	return nil
}

type SaveLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*subscribe.Link `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *SaveLinkReq) Reset() {
	*x = SaveLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLinkReq) ProtoMessage() {}

func (x *SaveLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLinkReq.ProtoReflect.Descriptor instead.
func (*SaveLinkReq) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{4}
}

func (x *SaveLinkReq) GetLinks() []*subscribe.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type LinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *LinkReq) Reset() {
	*x = LinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkReq) ProtoMessage() {}

func (x *LinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkReq.ProtoReflect.Descriptor instead.
func (*LinkReq) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{5}
}

func (x *LinkReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetLinksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links map[string]*subscribe.Link `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetLinksResp) Reset() {
	*x = GetLinksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinksResp) ProtoMessage() {}

func (x *GetLinksResp) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinksResp.ProtoReflect.Descriptor instead.
func (*GetLinksResp) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{6}
}

func (x *GetLinksResp) GetLinks() map[string]*subscribe.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type LatencyReqHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *LatencyReqHttp) Reset() {
	*x = LatencyReqHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyReqHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyReqHttp) ProtoMessage() {}

func (x *LatencyReqHttp) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyReqHttp.ProtoReflect.Descriptor instead.
func (*LatencyReqHttp) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LatencyReqHttp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type LatencyReqDns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TargetDomain string `protobuf:"bytes,2,opt,name=target_domain,json=target_name,proto3" json:"target_domain,omitempty"`
}

func (x *LatencyReqDns) Reset() {
	*x = LatencyReqDns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyReqDns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyReqDns) ProtoMessage() {}

func (x *LatencyReqDns) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyReqDns.ProtoReflect.Descriptor instead.
func (*LatencyReqDns) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{2, 1}
}

func (x *LatencyReqDns) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LatencyReqDns) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

type LatencyReqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      string                       `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Protocols []*LatencyReqRequestProtocol `protobuf:"bytes,2,rep,name=protocols,proto3" json:"protocols,omitempty"`
}

func (x *LatencyReqRequest) Reset() {
	*x = LatencyReqRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyReqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyReqRequest) ProtoMessage() {}

func (x *LatencyReqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyReqRequest.ProtoReflect.Descriptor instead.
func (*LatencyReqRequest) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{2, 2}
}

func (x *LatencyReqRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *LatencyReqRequest) GetProtocols() []*LatencyReqRequestProtocol {
	if x != nil {
		return x.Protocols
	}
	return nil
}

type LatencyReqRequestProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Protocol:
	//	*LatencyReqRequestProtocol_Http
	//	*LatencyReqRequestProtocol_Dns
	Protocol isLatencyReqRequestProtocol_Protocol `protobuf_oneof:"protocol"`
}

func (x *LatencyReqRequestProtocol) Reset() {
	*x = LatencyReqRequestProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyReqRequestProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyReqRequestProtocol) ProtoMessage() {}

func (x *LatencyReqRequestProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyReqRequestProtocol.ProtoReflect.Descriptor instead.
func (*LatencyReqRequestProtocol) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{2, 2, 0}
}

func (m *LatencyReqRequestProtocol) GetProtocol() isLatencyReqRequestProtocol_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (x *LatencyReqRequestProtocol) GetHttp() *LatencyReqHttp {
	if x, ok := x.GetProtocol().(*LatencyReqRequestProtocol_Http); ok {
		return x.Http
	}
	return nil
}

func (x *LatencyReqRequestProtocol) GetDns() *LatencyReqDns {
	if x, ok := x.GetProtocol().(*LatencyReqRequestProtocol_Dns); ok {
		return x.Dns
	}
	return nil
}

type isLatencyReqRequestProtocol_Protocol interface {
	isLatencyReqRequestProtocol_Protocol()
}

type LatencyReqRequestProtocol_Http struct {
	Http *LatencyReqHttp `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

type LatencyReqRequestProtocol_Dns struct {
	Dns *LatencyReqDns `protobuf:"bytes,2,opt,name=dns,proto3,oneof"`
}

func (*LatencyReqRequestProtocol_Http) isLatencyReqRequestProtocol_Protocol() {}

func (*LatencyReqRequestProtocol_Dns) isLatencyReqRequestProtocol_Protocol() {}

type LatencyRespLatency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return order by request protocols array
	Times []*durationpb.Duration `protobuf:"bytes,1,rep,name=times,proto3" json:"times,omitempty"`
}

func (x *LatencyRespLatency) Reset() {
	*x = LatencyRespLatency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_grpc_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyRespLatency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyRespLatency) ProtoMessage() {}

func (x *LatencyRespLatency) ProtoReflect() protoreflect.Message {
	mi := &file_node_grpc_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyRespLatency.ProtoReflect.Descriptor instead.
func (*LatencyRespLatency) Descriptor() ([]byte, []int) {
	return file_node_grpc_node_proto_rawDescGZIP(), []int{3, 0}
}

func (x *LatencyRespLatency) GetTimes() []*durationpb.Duration {
	if x != nil {
		return x.Times
	}
	return nil
}

var File_node_grpc_node_proto protoreflect.FileDescriptor

var file_node_grpc_node_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x75, 0x64, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x7c, 0x0a, 0x07,
	0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x6e, 0x6f, 0x77, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x6e, 0x65, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x0b,
	0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x6e, 0x65, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x10, 0x02, 0x22, 0xcd, 0x03, 0x0a, 0x0b, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x4c, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79,
	0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x18, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x1a, 0x3d, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x96, 0x02, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x57, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x43, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x40, 0x0a, 0x03,
	0x64, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x2e, 0x64, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xab, 0x02, 0x0a, 0x0c, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x10, 0x68,
	0x61, 0x73, 0x68, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x1a, 0x3a, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x1a, 0x74, 0x0a, 0x13, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69,
	0x69, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x72, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x79,
	0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x51, 0x0a, 0x0a, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xdb,
	0x03, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x12, 0x24,
	0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x6f, 0x77,
	0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x03, 0x75, 0x73,
	0x65, 0x12, 0x24, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65,
	0x12, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x07,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x15, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x07,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x32, 0xb5, 0x02, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x73, 0x61,
	0x76, 0x65, 0x12, 0x2a, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x25, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x47, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x75, 0x74, 0x6f, 0x72, 0x75, 0x66, 0x61, 0x2f, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_grpc_node_proto_rawDescOnce sync.Once
	file_node_grpc_node_proto_rawDescData = file_node_grpc_node_proto_rawDesc
)

func file_node_grpc_node_proto_rawDescGZIP() []byte {
	file_node_grpc_node_proto_rawDescOnce.Do(func() {
		file_node_grpc_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_grpc_node_proto_rawDescData)
	})
	return file_node_grpc_node_proto_rawDescData
}

var file_node_grpc_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_grpc_node_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_node_grpc_node_proto_goTypes = []interface{}{
	(NowReqNowReqNet)(0),              // 0: yuhaiin.protos.node.service.now_req.now_req_net
	(*UseReq)(nil),                    // 1: yuhaiin.protos.node.service.use_req
	(*NowReq)(nil),                    // 2: yuhaiin.protos.node.service.now_req
	(*LatencyReq)(nil),                // 3: yuhaiin.protos.node.service.latency_req
	(*LatencyResp)(nil),               // 4: yuhaiin.protos.node.service.latency_resp
	(*SaveLinkReq)(nil),               // 5: yuhaiin.protos.node.service.save_link_req
	(*LinkReq)(nil),                   // 6: yuhaiin.protos.node.service.link_req
	(*GetLinksResp)(nil),              // 7: yuhaiin.protos.node.service.get_links_resp
	(*LatencyReqHttp)(nil),            // 8: yuhaiin.protos.node.service.latency_req.http
	(*LatencyReqDns)(nil),             // 9: yuhaiin.protos.node.service.latency_req.dns
	(*LatencyReqRequest)(nil),         // 10: yuhaiin.protos.node.service.latency_req.request
	(*LatencyReqRequestProtocol)(nil), // 11: yuhaiin.protos.node.service.latency_req.request.protocol
	(*LatencyRespLatency)(nil),        // 12: yuhaiin.protos.node.service.latency_resp.latency
	nil,                               // 13: yuhaiin.protos.node.service.latency_resp.HashLatencyMapEntry
	nil,                               // 14: yuhaiin.protos.node.service.get_links_resp.LinksEntry
	(*subscribe.Link)(nil),            // 15: yuhaiin.subscribe.link
	(*durationpb.Duration)(nil),       // 16: google.protobuf.Duration
	(*wrapperspb.StringValue)(nil),    // 17: google.protobuf.StringValue
	(*point.Point)(nil),               // 18: yuhaiin.point.point
	(*emptypb.Empty)(nil),             // 19: google.protobuf.Empty
	(*node.Manager)(nil),              // 20: yuhaiin.node.manager
}
var file_node_grpc_node_proto_depIdxs = []int32{
	0,  // 0: yuhaiin.protos.node.service.now_req.net:type_name -> yuhaiin.protos.node.service.now_req.now_req_net
	10, // 1: yuhaiin.protos.node.service.latency_req.requests:type_name -> yuhaiin.protos.node.service.latency_req.request
	13, // 2: yuhaiin.protos.node.service.latency_resp.hash_latency_map:type_name -> yuhaiin.protos.node.service.latency_resp.HashLatencyMapEntry
	15, // 3: yuhaiin.protos.node.service.save_link_req.links:type_name -> yuhaiin.subscribe.link
	14, // 4: yuhaiin.protos.node.service.get_links_resp.links:type_name -> yuhaiin.protos.node.service.get_links_resp.LinksEntry
	11, // 5: yuhaiin.protos.node.service.latency_req.request.protocols:type_name -> yuhaiin.protos.node.service.latency_req.request.protocol
	8,  // 6: yuhaiin.protos.node.service.latency_req.request.protocol.http:type_name -> yuhaiin.protos.node.service.latency_req.http
	9,  // 7: yuhaiin.protos.node.service.latency_req.request.protocol.dns:type_name -> yuhaiin.protos.node.service.latency_req.dns
	16, // 8: yuhaiin.protos.node.service.latency_resp.latency.times:type_name -> google.protobuf.Duration
	12, // 9: yuhaiin.protos.node.service.latency_resp.HashLatencyMapEntry.value:type_name -> yuhaiin.protos.node.service.latency_resp.latency
	15, // 10: yuhaiin.protos.node.service.get_links_resp.LinksEntry.value:type_name -> yuhaiin.subscribe.link
	2,  // 11: yuhaiin.protos.node.service.node.now:input_type -> yuhaiin.protos.node.service.now_req
	1,  // 12: yuhaiin.protos.node.service.node.use:input_type -> yuhaiin.protos.node.service.use_req
	17, // 13: yuhaiin.protos.node.service.node.get:input_type -> google.protobuf.StringValue
	18, // 14: yuhaiin.protos.node.service.node.save:input_type -> yuhaiin.point.point
	17, // 15: yuhaiin.protos.node.service.node.remove:input_type -> google.protobuf.StringValue
	17, // 16: yuhaiin.protos.node.service.node.manager:input_type -> google.protobuf.StringValue
	3,  // 17: yuhaiin.protos.node.service.node.latency:input_type -> yuhaiin.protos.node.service.latency_req
	5,  // 18: yuhaiin.protos.node.service.subscribe.save:input_type -> yuhaiin.protos.node.service.save_link_req
	6,  // 19: yuhaiin.protos.node.service.subscribe.remove:input_type -> yuhaiin.protos.node.service.link_req
	6,  // 20: yuhaiin.protos.node.service.subscribe.update:input_type -> yuhaiin.protos.node.service.link_req
	19, // 21: yuhaiin.protos.node.service.subscribe.get:input_type -> google.protobuf.Empty
	18, // 22: yuhaiin.protos.node.service.node.now:output_type -> yuhaiin.point.point
	18, // 23: yuhaiin.protos.node.service.node.use:output_type -> yuhaiin.point.point
	18, // 24: yuhaiin.protos.node.service.node.get:output_type -> yuhaiin.point.point
	18, // 25: yuhaiin.protos.node.service.node.save:output_type -> yuhaiin.point.point
	19, // 26: yuhaiin.protos.node.service.node.remove:output_type -> google.protobuf.Empty
	20, // 27: yuhaiin.protos.node.service.node.manager:output_type -> yuhaiin.node.manager
	4,  // 28: yuhaiin.protos.node.service.node.latency:output_type -> yuhaiin.protos.node.service.latency_resp
	19, // 29: yuhaiin.protos.node.service.subscribe.save:output_type -> google.protobuf.Empty
	19, // 30: yuhaiin.protos.node.service.subscribe.remove:output_type -> google.protobuf.Empty
	19, // 31: yuhaiin.protos.node.service.subscribe.update:output_type -> google.protobuf.Empty
	7,  // 32: yuhaiin.protos.node.service.subscribe.get:output_type -> yuhaiin.protos.node.service.get_links_resp
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_node_grpc_node_proto_init() }
func file_node_grpc_node_proto_init() {
	if File_node_grpc_node_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_grpc_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyReqHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyReqDns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyReqRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyReqRequestProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_grpc_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyRespLatency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_node_grpc_node_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*LatencyReqRequestProtocol_Http)(nil),
		(*LatencyReqRequestProtocol_Dns)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_grpc_node_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_node_grpc_node_proto_goTypes,
		DependencyIndexes: file_node_grpc_node_proto_depIdxs,
		EnumInfos:         file_node_grpc_node_proto_enumTypes,
		MessageInfos:      file_node_grpc_node_proto_msgTypes,
	}.Build()
	File_node_grpc_node_proto = out.File
	file_node_grpc_node_proto_rawDesc = nil
	file_node_grpc_node_proto_goTypes = nil
	file_node_grpc_node_proto_depIdxs = nil
}
